#lang racket
; sumnumbers:takes a list of atos and sums the numbers in ths list.
(define sumnumbers
  (lambda (lis)
    (cond
      [(null? lis) 0]
      [(number? (car lis)) (+ (car lis) (sumnumbers (cdr lis)))]
      [else (sumnumbers (cdr lis))])))

; CPS form
(define sumnumbers-cps
  (lambda (lis return)
    (cond
      [(null? lis) (return 0)]
      [(number? (car lis)) (sumnumbers-cps (cdr lis) (lambda (v)) (return (+ v (car lis))))]
      [else (sumnumbers-cps (cdr lis) return)])))
  